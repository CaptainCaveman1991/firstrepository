{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\firstrepository\\\\react\\\\project1\\\\src\\\\datafromweb.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DataFromWeb() {\n  _s();\n  let [records, setRecords] = useState([]);\n  function getDataFromResponse(data) {\n    setRecords(data);\n  }\n  function processResponse(response) {\n    let jsonPromise = response.json();\n    jsonPromise.then(getDataFromResponse);\n  }\n  let responsePromise = fetch('https://jsonplaceholder.typicode.com/comments');\n  responsePromise.then(processResponse);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello Web\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: records.map(rec => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [\" \", rec.name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(DataFromWeb, \"My3+7tL8OOIngyRfbBmHpG1tRCc=\");\n_c = DataFromWeb;\nexport default DataFromWeb;\nvar _c;\n$RefreshReg$(_c, \"DataFromWeb\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","DataFromWeb","_s","records","setRecords","getDataFromResponse","data","processResponse","response","jsonPromise","json","then","responsePromise","fetch","children","fileName","_jsxFileName","lineNumber","columnNumber","map","rec","name","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Documents/firstrepository/react/project1/src/datafromweb.js"],"sourcesContent":["import {useState} from 'react'\r\n\r\nfunction DataFromWeb(){\r\n\r\n    let[records,setRecords]=useState([])\r\n\r\n    function getDataFromResponse(data){\r\n        setRecords(data)\r\n    }\r\n    function processResponse(response){\r\n        let jsonPromise = response.json()\r\n        jsonPromise.then(getDataFromResponse)\r\n    }\r\nlet responsePromise = fetch('https://jsonplaceholder.typicode.com/comments')\r\nresponsePromise.then(processResponse)\r\n\r\nreturn(\r\n    <>\r\n        <h1>Hello Web</h1>\r\n        <table>\r\n            {\r\n            records.map( (rec) =>\r\n            <tr>\r\n                <td> {rec.name} </td>\r\n            </tr> \r\n            )\r\n}       \r\n        </table>\r\n        </>\r\n)\r\n}\r\n\r\nexport default DataFromWeb"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9B,SAASC,WAAWA,CAAA,EAAE;EAAAC,EAAA;EAElB,IAAG,CAACC,OAAO,EAACC,UAAU,CAAC,GAACR,QAAQ,CAAC,EAAE,CAAC;EAEpC,SAASS,mBAAmBA,CAACC,IAAI,EAAC;IAC9BF,UAAU,CAACE,IAAI,CAAC;EACpB;EACA,SAASC,eAAeA,CAACC,QAAQ,EAAC;IAC9B,IAAIC,WAAW,GAAGD,QAAQ,CAACE,IAAI,CAAC,CAAC;IACjCD,WAAW,CAACE,IAAI,CAACN,mBAAmB,CAAC;EACzC;EACJ,IAAIO,eAAe,GAAGC,KAAK,CAAC,+CAA+C,CAAC;EAC5ED,eAAe,CAACD,IAAI,CAACJ,eAAe,CAAC;EAErC,oBACIT,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBACIhB,OAAA;MAAAgB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBpB,OAAA;MAAAgB,QAAA,EAEIX,OAAO,CAACgB,GAAG,CAAGC,GAAG,iBACjBtB,OAAA;QAAAgB,QAAA,eACIhB,OAAA;UAAAgB,QAAA,GAAI,GAAC,EAACM,GAAG,CAACC,IAAI,EAAC,GAAC;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEE,CAAC;EAAA,eACN,CAAC;AAEX;AAAChB,EAAA,CA5BQD,WAAW;AAAAqB,EAAA,GAAXrB,WAAW;AA8BpB,eAAeA,WAAW;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}